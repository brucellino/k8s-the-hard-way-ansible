---
# Workers
# - name: Fetch VPC
#   community.digitalocean.digital_ocean_vpc_info:
#   register: do_vpc
#   when: do_vpc is not defined

# - name: Fetch SSH Keys
#   community.digitalocean.digital_ocean_sshkey_info:
#   register: do_ssh_keys
#   when: do_ssh_key is not defined

# - debug:
#     var: do_vpc

# Set fact to declare ssh key selecting the right one.

- name: Create Worker Machines
  community.digitalocean.digital_ocean_droplet:
    state: present
    name: "kube-worker-{{ item }}"
    size: "{{ _size_id }}"
    region_id: "{{ _region_id }}"
    image: "{{ _image_id }}"
    ssh_keys: "{{ do_ssh_key.data.ssh_key.id }}"
    unique_name: true
    private_networking: true
    monitoring: true
    vpc_uuid: "{{ do_vpc.data.vpc.id }}"
    tags:
      - k8s
      - worker
      - auto_destroy
  register: worker_droplets
  loop: "{{ range(0, 3) | list }}"
  when: deploy | bool

# ## Kubelet certs
# - name: Kubelet client private key
#   community.crypto.openssl_privatekey:
#     path: "{{ lookup('env', 'PWD') }}/certs/kubelet-key.pem"
#     type: RSA

# # This requires knowing the IP and hostname of the machine
# - name: Create kubelet client CSR
#   community.crypto.openssl_csr_pipe:
#     privatekey_path: "{{ lookup('env', 'PWD') }}/certs/kubelet-key.pem"
#     common_name: system:node:
#     country_name: IT
#     locality_name: Catania
#     state_or_province_name: Sicily
#     organizational_unit_name: Kubernetes The Hard Way
#     organization_name: system:masters
#   register: admin_csr
# - name: Check whether admin certificate exists
#   ansible.builtin.stat:
#     path: "{{ lookup('env', 'PWD') }}/certs/admin-cert.pem"
#   register: admin_cert_exists

# - name: Read admin cert if it exists
#   ansible.builtin.slurp:
#     src: "{{ lookup('env', 'PWD') }}/certs/admin-cert.pem"
#   when: admin_cert_exists.stat.exists
#   register: admin_cert

# - name: Sign admin cert with CA
#   community.crypto.x509_certificate_pipe:
#     content: "{{ (admin_cert.content | b64decode) if admin_cert_exists.stat.exists else omit }}"
#     csr_content: "{{ admin_csr.csr }}"
#     provider: ownca
#     ownca_path: "{{ lookup('env', 'PWD') }}/ca/ca-cert.pem"
#     ownca_privatekey_path: "{{ lookup('env', 'PWD') }}/ca/ca-key.pem"
#     ownca_not_after: "+6d"
#     ownca_not_before: "-1d"
#   register: signed_admin_cert

# - name: Write Admin cert # noqa no-handler
#   ansible.builtin.copy:
#     dest: "{{ lookup('env', 'PWD') }}/certs/admin-cert.pem"
#     content: "{{ signed_admin_cert.certificate }}"
#     mode: "0644"
#   when: signed_admin_cert is changed
