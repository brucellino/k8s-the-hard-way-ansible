---
- name: Ensure certs dir
  ansible.builtin.file:
    path: "{{ pki_dir }}/{{ item }}"
    state: directory
    mode: "0744"
    owner: root
    group: root
  loop:
    - certs
    - ca

# Kubelet certs
- name: Kubelet client private key
  community.crypto.openssl_privatekey:
    path: "{{ pki_dir }}/certs/kubelet-{{ item }}-key.pem"
    type: RSA
  loop: "{{ range(0, 3) | list }}"

# This requires knowing the IP and hostname of the machine
- name: Create kubelet client CSR
  community.crypto.openssl_csr_pipe:
    privatekey_path: "{{ lookup('env', 'PWD') }}/certs/kubelet-{{ item }}-key.pem"
    common_name: "system:node:node-{{ item }}"
    country_name: IT
    locality_name: Catania
    state_or_province_name: Sicily
    organizational_unit_name: Kubernetes The Hard Way
    organization_name: system:masters
    # Key usage below is from the CFSSL "kubernetes" profile.
    # See https://github.com/kelseyhightower/kubernetes-the-hard-way/issues/424
    key_usage:
      - signing
      - keyEncipherment
      - serverAuth
      - clientAuth
    subject_alt_name:
      - "{{ item.name }}"
      - "{{ item.networks.v4[0].ip_address }}"
      - "{{ item.networks.v4[1].ip_address }}"
  register: kubelet_csr
  loop: "{{ worker_droplets.data }}"

- name: Check whether kubelet certificate exists
  ansible.builtin.stat:
    path: "{{ lookup('env', 'PWD') }}/certs/kubelet-{{ item }}-cert.pem"
  register: kube_cert_exists
  loop: "{{ range(0, 3) | list }}"

- name: Read kubelet cert if it exists
  ansible.builtin.slurp:
    src: "{{ lookup('env', 'PWD') }}/certs/kubelet-{{ item.item }}-cert.pem"
  when: kube_cert_exists | community.general.json_query('results[?stat.exists]')
  register: kube_cert
  loop: "{{ kube_cert_exists.results | list }}"

- name: Sign kubelet cert with CA # noqa jinja[invalid]
  community.crypto.x509_certificate_pipe:
    content: "{{ (kube_cert.content | b64decode) if (kube_cert_exists | community.general.json_query('results[?stat.exists]')) else omit }}"
    csr_content: "{{ kubelet_csr.results[item].csr }}"
    provider: ownca
    ownca_path: "{{ lookup('env', 'PWD') }}/ca/ca-cert.pem"
    ownca_privatekey_path: "{{ lookup('env', 'PWD') }}/ca/ca-key.pem"
    ownca_not_after: "+6d"
    ownca_not_before: "-1d"
  register: signed_kubelet_cert
  loop: "{{ range(0, 3) | list }}"

- name: Write kubelet cert # noqa no-handler
  ansible.builtin.copy:
    dest: "{{ lookup('env', 'PWD') }}/certs/kubelet-cert-{{ item.item }}.pem"
    content: "{{ item.certificate }}"
    mode: "0644"
  when: signed_kubelet_cert is changed
  loop: "{{ signed_kubelet_cert.results | list }}"
